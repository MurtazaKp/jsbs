name: Build and Deploy to SiteGround

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build static export
        run: npm run build

      - name: Add .htaccess to out if exists in public
        run: |
          if [ -f public/.htaccess ]; then
            cp public/.htaccess out/.htaccess
          fi

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Deploy via rsync (atomic, delete removed)
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >> ~/.ssh/config <<EOF
          Host target
            HostName $SSH_HOST
            User $SSH_USER
            Port ${SSH_PORT:-22}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          EOF
          rsync -az --delete --info=progress2 \
            out/ target:${REMOTE_DIR}

      - name: Purge SiteGround cache (optional)
        if: ${{ secrets.SG_CACHE_PURGE_URL != '' }}
        run: |
          curl -sS -X POST "$SG_CACHE_PURGE_URL" || true
name: FTP Deploy
on:
  push:
    branches:
      - main

jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get latest code
        uses: actions/checkout@v3

      # Optional, but good practice
      - name: Clear npm Cache
        run: npm cache clean --force

      - name: Install Dependencies
        run: npm install

      # This is the crucial new steps
      - name: Clean Build Cache
        run: rm -rf ./out ./.next

      - name: Build Next.js Static Site
        run: npm run build

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./out/
          server-dir: jsbs.jameasaifiyah.edu/public_html/
