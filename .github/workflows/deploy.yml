name: Build and Deploy to SiteGround

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build static export
        run: npm run build

      - name: Add .htaccess to out if exists in public
        run: |
          if [ -f public/.htaccess ]; then
            cp public/.htaccess out/.htaccess
          fi

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Validate SSH deploy secrets
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          if [ -z "$SSH_USER" ] || [ -z "$SSH_HOST" ] || [ -z "$SSH_KEY" ] || [ -z "$REMOTE_DIR" ]; then
            echo "Missing one or more required secrets: SSH_USER, SSH_HOST, SSH_PRIVATE_KEY, REMOTE_DIR" >&2
            exit 1
          fi

      - name: Deploy via rsync (atomic, delete removed)
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          RSYNC_SSH="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p ${SSH_PORT:-22}"
          rsync -az --delete --info=progress2 -e "$RSYNC_SSH" \
            out/ ${SSH_USER}@${SSH_HOST}:${REMOTE_DIR}

      - name: Purge SiteGround cache (optional)
        if: ${{ env.SG_CACHE_PURGE_URL != '' }}
        env:
          SG_CACHE_PURGE_URL: ${{ secrets.SG_CACHE_PURGE_URL }}
        run: |
          curl -sS -X POST "$SG_CACHE_PURGE_URL" || true
